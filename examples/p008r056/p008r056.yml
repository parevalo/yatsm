# Example configuration file for YATSM line runner
#
# This configuration includes details about the dataset and to run an analysis
# pipeline using YATSM

# Version of config
version: "0.7.0"

data:
    # primary (str): Preference among datasets for projection/geotransform
    #                corresponds to a key in data.datasets
    primary: Landsat
    # Optional: Directory location for caching dataset
    # cache_dir: "$ROOT/cache"
    datasets:
        Landsat:
            # Type of reader for this dataset (GDAL)
            reader:
                name: GDAL
                GDAL:
                    # Text file containing dates and images
                    input_file: "$ROOT/Landsat.csv"
                    # Input date format
                    date_format: "%Y%j"
                    # "dtype" argument to pandas.read_csv
                    # Allows you to specify the datatype of specific columns
                    column_dtype:
                        path: str
                    # Keep references to input files open throughout process
                    #   Can cut down on overhead of repeatedly opening files
                    #   assuming the OS lets users keep many open
                    keep_open: True
            # Band names
            band_names: [blue, green, red, nir, swir1, swir2, temp, fmask]
            # Mask band (e.g., Fmask)
            mask_band: fmask
            # List of integer values to mask within the mask band
            mask_values: [2, 3, 4, 255]
            # Valid range of band data
            min_values: [0, 0, 0, 0, 0, 0, -100, 0]
            max_values: [10000, 10000, 10000, 10000, 10000, 10000, 16000, 255]
        ALOS_hh:
            reader:
                name: GDAL
                GDAL:
                    input_file: "$ROOT/ALOS_hh.csv"
                    date_format: "%Y%m%d"
                    column_dtype:
                        path: str
            band_names: [hh]
            min_values: [-100]
            max_values: [-0.000001]
        ALOS_hv:
            reader:
                name: GDAL
                GDAL:
                    input_file: "$ROOT/ALOS_hv.csv"
                    date_format: "%Y%m%d"
                    column_dtype:
                        path: str
            band_names: [hv]
            min_values: [-100]
            max_values: [-0.000001]

results:
    # Output location
    output: "$ROOT/TSR"
    # Output filename pattern
    output_prefix: "yatsm_r{row_off:04d}_{num_rows:04d}_c{col_off:04d}_{num_cols:04d}.h5"

pipeline:
    overwrite: False
    tasks:
        fuse_resid:
            task: pixel_FuseResid
            require:
                data: [ndmi, ndvi, hh, hv, X_optical, X_hh, X_hv]
            output:
                record: [fuse_resid]
            config:
                init:
                    mv_method: plurality
                    span_time: 365
                    span_train: 1
                    min_sigma: [0.0, 0.1, 0.1]
                    ewma_lambda_: 0.5
                    ewma_crit: 4.0
                    ewma_std_type: SD
                fit:
                    Ys: [
                        [ndmi, hh, hv],
                        [ndvi, hh, hv]
                    ]
                    Xs: [
                        [X_optical, X_hh, X_hv],
                        [X_optical, X_hh, X_hv]
                    ]
        ndvi:
            task: norm_diff
            require:
                data: [nir, red]
            output:
                data: [ndvi]
        ndmi:
            task: norm_diff
            require:
                data: [nir, swir1]
            output:
                data: [ndmi]
        X_optical:
            task: dmatrix
            require:
                data: [ndmi, ndvi]
            output:
                data: [X_optical]
            config:
                design: '1 + ordinal + harm(ordinal, 1)'
        X_hh:
            task: dmatrix
            require:
                data: [hh]
            output:
                data: [X_hh]
            config:
                design: '1'
        X_hv:
            task: dmatrix
            require:
                data: [hv]
            output:
                data: [X_hv]
            config:
                design: '1'

